apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zabbix-server
spec:
  serviceName: zabbix-server
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-server
  template:
    metadata:
      labels:
        app: zabbix-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - asia-east1-b
                - asia-east1-c
      serviceAccountName: ksa-cloudsqlproxy
      containers:
        - name: zabbix-server
          image: zabbix/zabbix-server-pgsql:alpine-6.0-latest
          env:
            - name: DB_SERVER_HOST
              value: 127.0.0.1
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: zabbix-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zabbix-secret
                  key: password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: zabbix-secret
                  key: database
            - name: ZBX_ENABLE_SNMP_TRAPS
              value: "true"
          ports:
            - containerPort: 10051
        - name: zabbix-agent
          image: zabbix/zabbix-agent2:alpine-6.0-latest
          env:
            - name: ZBX_HOSTNAME
              value: "zabbix-server"
            - name: ZBX_SERVER_HOST
              value: localhost
        - name: zabbix-snmptraps
          image: zabbix/zabbix-snmptraps:alpine-6.0-latest
          ports:
            - containerPort: 1162
          volumeMounts:
            - mountPath: /var/lib/zabbix/snmptraps
              name: pvc-snmp
        # [START cloud_sql_proxy_k8s_container]
        - name: cloud-sql-proxy
          # It is recommended to use the latest version of the Cloud SQL proxy
          # Make sure to update on a regular schedule!
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
          command:
            - "/cloud_sql_proxy"

            # If connecting from a VPC-native GKE cluster, you can use the
            # following flag to have the proxy connect over private IP
            # - "-ip_address_types=PRIVATE"

            # By default, the proxy will write all logs to stderr. In some
            # environments, anything printed to stderr is consider an error. To
            # disable this behavior and write all logs to stdout (except errors
            # which will still go to stderr), use:
            - "-log_debug_stdout"

            # Replace DB_PORT with the port the proxy should listen on
            # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
            - "-instances=<INSTANCE_CONNECTION_NAME>=tcp:5432"
          securityContext:
            # The default Cloud SQL proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
            runAsNonRoot: true
          # You should use resource requests/limits as a best practice to prevent
          # pods from consuming too many resources and affecting the execution of
          # other pods. You should adjust the following values based on what your
          # application needs. For details, see
          # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          resources:
            requests:
              # The proxy's memory use scales linearly with the number of active
              # connections. Fewer open connections will use less memory. Adjust
              # this value based on your application's requirements.
              memory: "2Gi"
              # The proxy's CPU use scales linearly with the amount of IO between
              # the database and the application. Adjust this value based on your
              # application's requirements.
              cpu: "1"
        # [END cloud_sql_proxy_k8s_container]
  volumeClaimTemplates:
  - metadata:
      name: pvc-snmp
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 30Gi